name: Build and publish snapshot

on:
  push:
    branches: [ master ]
    paths-ignore: [ '**.md', '**.MD' ]
    tags-ignore:
      - '**'
  pull_request:
    branches: [ master ]
    paths-ignore: [ '**.md', '**.MD' ]
  workflow_dispatch:

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false -XX:+UseParallelGC -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8"

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-11, ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Cache gradle, wrapper and buildSrc
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ matrix.os }}-gradle-

      - name: Cache konan
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan/cache
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
            ~/.konan/kotlin-native-mingw*
            ~/.konan/kotlin-native-windows*
            ~/.konan/kotlin-native-linux*
            ~/.konan/kotlin-native-prebuilt-macos*
            ~/.konan/kotlin-native-prebuilt-mingw*
            ~/.konan/kotlin-native-prebuilt-windows*
            ~/.konan/kotlin-native-prebuilt-linux*
          key: ${{ matrix.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ matrix.os }}-konan-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew build --stacktrace

      - name: Kover Xml Report
        run: ./gradlew koverXmlReport

      - name: Upload Test Report
        uses: codecov/codecov-action@v3.1.4

      - name: Upload test report artifact
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: build/reports/tests/allTests/

  publish:
    needs: [ build ]
    if: ${{ github.ref == 'refs/heads/master' && github.repository == 'hoc081098/FlowExt' }}
    strategy:
      matrix:
        os: [ macos-11 ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Cache gradle, wrapper and buildSrc
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
          restore-keys: |
            ${{ matrix.os }}-gradle-

      - name: Cache konan
        uses: actions/cache@v3
        with:
          path: |
            ~/.konan/cache
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
            ~/.konan/kotlin-native-mingw*
            ~/.konan/kotlin-native-windows*
            ~/.konan/kotlin-native-linux*
            ~/.konan/kotlin-native-prebuilt-macos*
            ~/.konan/kotlin-native-prebuilt-mingw*
            ~/.konan/kotlin-native-prebuilt-windows*
            ~/.konan/kotlin-native-prebuilt-linux*
          key: ${{ matrix.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ matrix.os }}-konan-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Retrieve version
        run: |
          echo "VERSION_NAME=$(cat gradle.properties | grep -w "VERSION_NAME" | cut -d'=' -f2)" >> $GITHUB_ENV
        shell: bash

      - name: Publish snapshot
        run: ./gradlew publish --stacktrace
        if: ${{ endsWith(env.VERSION_NAME, '-SNAPSHOT') && matrix.os == 'macos-11' }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MAVEN_SIGNING_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MAVEN_SIGNING_PASSWORD }}

      # - name: Publish snapshot (Windows)
      #   run: ./gradlew publishMingwX64PublicationToMavenCentralRepository --no-parallel --stacktrace
      #   if: ${{ endsWith(env.VERSION_NAME, '-SNAPSHOT') && matrix.os == 'windows-latest' }}
      #   env:
      #     ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
      #     ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
      #     ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.MAVEN_SIGNING_PRIVATE_KEY }}
      #     ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.MAVEN_SIGNING_PASSWORD }}

      - name: Generate docs
        run: ./gradlew dokkaHtml --no-parallel --stacktrace

      - name: Deploy docs ðŸš€ to website
        if: ${{ github.ref == 'refs/heads/master' && github.repository == 'hoc081098/FlowExt' && matrix.os == 'macos-11' }}
        uses: JamesIves/github-pages-deploy-action@v4.4.3
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: build/dokka/html # The folder the action should deploy.
          target-folder: docs/latest/
          clean: true
